-- MySQL Script generated by MySQL Workbench
-- Fri Dec  1 20:25:54 2023
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `mydb` DEFAULT CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci ;
USE `mydb` ;

-- -----------------------------------------------------
-- Table `mydb`.`auth_group`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`auth_group` ;

CREATE TABLE IF NOT EXISTS `mydb`.`auth_group` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(150) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `name` (`name` ASC) VISIBLE)
ENGINE = InnoDB
AUTO_INCREMENT = 3
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;


-- -----------------------------------------------------
-- Table `mydb`.`django_content_type`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`django_content_type` ;

CREATE TABLE IF NOT EXISTS `mydb`.`django_content_type` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `app_label` VARCHAR(100) NOT NULL,
  `model` VARCHAR(100) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `django_content_type_app_label_model_76bd3d3b_uniq` (`app_label` ASC, `model` ASC) VISIBLE)
ENGINE = InnoDB
AUTO_INCREMENT = 23
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;


-- -----------------------------------------------------
-- Table `mydb`.`auth_permission`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`auth_permission` ;

CREATE TABLE IF NOT EXISTS `mydb`.`auth_permission` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(255) NOT NULL,
  `content_type_id` INT NOT NULL,
  `codename` VARCHAR(100) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `auth_permission_content_type_id_codename_01ab375a_uniq` (`content_type_id` ASC, `codename` ASC) VISIBLE,
  CONSTRAINT `auth_permission_content_type_id_2f476e4b_fk_django_co`
    FOREIGN KEY (`content_type_id`)
    REFERENCES `mydb`.`django_content_type` (`id`))
ENGINE = InnoDB
AUTO_INCREMENT = 89
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;


-- -----------------------------------------------------
-- Table `mydb`.`auth_group_permissions`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`auth_group_permissions` ;

CREATE TABLE IF NOT EXISTS `mydb`.`auth_group_permissions` (
  `id` BIGINT NOT NULL AUTO_INCREMENT,
  `group_id` INT NOT NULL,
  `permission_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `auth_group_permissions_group_id_permission_id_0cd325b0_uniq` (`group_id` ASC, `permission_id` ASC) VISIBLE,
  INDEX `auth_group_permissio_permission_id_84c5c92e_fk_auth_perm` (`permission_id` ASC) VISIBLE,
  CONSTRAINT `auth_group_permissio_permission_id_84c5c92e_fk_auth_perm`
    FOREIGN KEY (`permission_id`)
    REFERENCES `mydb`.`auth_permission` (`id`),
  CONSTRAINT `auth_group_permissions_group_id_b120cbf9_fk_auth_group_id`
    FOREIGN KEY (`group_id`)
    REFERENCES `mydb`.`auth_group` (`id`))
ENGINE = InnoDB
AUTO_INCREMENT = 88
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;


-- -----------------------------------------------------
-- Table `mydb`.`auth_user`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`auth_user` ;

CREATE TABLE IF NOT EXISTS `mydb`.`auth_user` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `password` VARCHAR(128) NOT NULL,
  `last_login` DATETIME(6) NULL DEFAULT NULL,
  `is_superuser` TINYINT(1) NOT NULL,
  `username` VARCHAR(150) NOT NULL,
  `first_name` VARCHAR(150) NOT NULL,
  `last_name` VARCHAR(150) NOT NULL,
  `email` VARCHAR(254) NOT NULL,
  `is_staff` TINYINT(1) NOT NULL,
  `is_active` TINYINT(1) NOT NULL,
  `date_joined` DATETIME(6) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `username` (`username` ASC) VISIBLE)
ENGINE = InnoDB
AUTO_INCREMENT = 8
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;


-- -----------------------------------------------------
-- Table `mydb`.`auth_user_groups`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`auth_user_groups` ;

CREATE TABLE IF NOT EXISTS `mydb`.`auth_user_groups` (
  `id` BIGINT NOT NULL AUTO_INCREMENT,
  `user_id` INT NOT NULL,
  `group_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `auth_user_groups_user_id_group_id_94350c0c_uniq` (`user_id` ASC, `group_id` ASC) VISIBLE,
  INDEX `auth_user_groups_group_id_97559544_fk_auth_group_id` (`group_id` ASC) VISIBLE,
  CONSTRAINT `auth_user_groups_group_id_97559544_fk_auth_group_id`
    FOREIGN KEY (`group_id`)
    REFERENCES `mydb`.`auth_group` (`id`),
  CONSTRAINT `auth_user_groups_user_id_6a12ed8b_fk_auth_user_id`
    FOREIGN KEY (`user_id`)
    REFERENCES `mydb`.`auth_user` (`id`))
ENGINE = InnoDB
AUTO_INCREMENT = 6
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;


-- -----------------------------------------------------
-- Table `mydb`.`auth_user_user_permissions`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`auth_user_user_permissions` ;

CREATE TABLE IF NOT EXISTS `mydb`.`auth_user_user_permissions` (
  `id` BIGINT NOT NULL AUTO_INCREMENT,
  `user_id` INT NOT NULL,
  `permission_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `auth_user_user_permissions_user_id_permission_id_14a6b632_uniq` (`user_id` ASC, `permission_id` ASC) VISIBLE,
  INDEX `auth_user_user_permi_permission_id_1fbb5f2c_fk_auth_perm` (`permission_id` ASC) VISIBLE,
  CONSTRAINT `auth_user_user_permi_permission_id_1fbb5f2c_fk_auth_perm`
    FOREIGN KEY (`permission_id`)
    REFERENCES `mydb`.`auth_permission` (`id`),
  CONSTRAINT `auth_user_user_permissions_user_id_a95ead1b_fk_auth_user_id`
    FOREIGN KEY (`user_id`)
    REFERENCES `mydb`.`auth_user` (`id`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;


-- -----------------------------------------------------
-- Table `mydb`.`django_admin_log`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`django_admin_log` ;

CREATE TABLE IF NOT EXISTS `mydb`.`django_admin_log` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `action_time` DATETIME(6) NOT NULL,
  `object_id` LONGTEXT NULL DEFAULT NULL,
  `object_repr` VARCHAR(200) NOT NULL,
  `action_flag` SMALLINT UNSIGNED NOT NULL,
  `change_message` LONGTEXT NOT NULL,
  `content_type_id` INT NULL DEFAULT NULL,
  `user_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `django_admin_log_content_type_id_c4bce8eb_fk_django_co` (`content_type_id` ASC) VISIBLE,
  INDEX `django_admin_log_user_id_c564eba6_fk_auth_user_id` (`user_id` ASC) VISIBLE,
  CONSTRAINT `django_admin_log_content_type_id_c4bce8eb_fk_django_co`
    FOREIGN KEY (`content_type_id`)
    REFERENCES `mydb`.`django_content_type` (`id`),
  CONSTRAINT `django_admin_log_user_id_c564eba6_fk_auth_user_id`
    FOREIGN KEY (`user_id`)
    REFERENCES `mydb`.`auth_user` (`id`))
ENGINE = InnoDB
AUTO_INCREMENT = 235
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;


-- -----------------------------------------------------
-- Table `mydb`.`django_migrations`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`django_migrations` ;

CREATE TABLE IF NOT EXISTS `mydb`.`django_migrations` (
  `id` BIGINT NOT NULL AUTO_INCREMENT,
  `app` VARCHAR(255) NOT NULL,
  `name` VARCHAR(255) NOT NULL,
  `applied` DATETIME(6) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB
AUTO_INCREMENT = 22
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;


-- -----------------------------------------------------
-- Table `mydb`.`django_session`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`django_session` ;

CREATE TABLE IF NOT EXISTS `mydb`.`django_session` (
  `session_key` VARCHAR(40) NOT NULL,
  `session_data` LONGTEXT NOT NULL,
  `expire_date` DATETIME(6) NOT NULL,
  PRIMARY KEY (`session_key`),
  INDEX `django_session_expire_date_a5c62663` (`expire_date` ASC) VISIBLE)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;


-- -----------------------------------------------------
-- Table `mydb`.`gamegenre`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`gamegenre` ;

CREATE TABLE IF NOT EXISTS `mydb`.`gamegenre` (
  `IDGenre` INT NOT NULL AUTO_INCREMENT,
  `TypeOfGenre` VARCHAR(45) NULL DEFAULT NULL,
  PRIMARY KEY (`IDGenre`))
ENGINE = InnoDB
AUTO_INCREMENT = 6
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;


-- -----------------------------------------------------
-- Table `mydb`.`gamelauncher`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`gamelauncher` ;

CREATE TABLE IF NOT EXISTS `mydb`.`gamelauncher` (
  `IDGameLauncher` INT NOT NULL,
  `LauncherName` VARCHAR(45) NULL DEFAULT NULL,
  PRIMARY KEY (`IDGameLauncher`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;


-- -----------------------------------------------------
-- Table `mydb`.`game`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`game` ;

CREATE TABLE IF NOT EXISTS `mydb`.`game` (
  `IDGame` INT NOT NULL AUTO_INCREMENT,
  `GameName` VARCHAR(45) NULL DEFAULT NULL,
  `GamePublisher` VARCHAR(45) NULL DEFAULT NULL,
  `GameDeveloper` VARCHAR(45) NULL DEFAULT NULL,
  `ReleaseDate` DATE NULL DEFAULT NULL,
  `GameGenre` INT NULL DEFAULT NULL,
  `LauncherType` INT NULL DEFAULT NULL,
  `GamePrice` FLOAT NULL DEFAULT NULL,
  PRIMARY KEY (`IDGame`),
  INDEX `GameGenre_idx` (`GameGenre` ASC) VISIBLE,
  INDEX `GameLauncher_idx` (`LauncherType` ASC) VISIBLE,
  CONSTRAINT `GameGenre`
    FOREIGN KEY (`GameGenre`)
    REFERENCES `mydb`.`gamegenre` (`IDGenre`),
  CONSTRAINT `GameLauncher`
    FOREIGN KEY (`LauncherType`)
    REFERENCES `mydb`.`gamelauncher` (`IDGameLauncher`))
ENGINE = InnoDB
AUTO_INCREMENT = 8
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;


-- -----------------------------------------------------
-- Table `mydb`.`epicgames`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`epicgames` ;

CREATE TABLE IF NOT EXISTS `mydb`.`epicgames` (
  `IDGameEpicGames` INT NOT NULL,
  `GameName` VARCHAR(45) NULL DEFAULT NULL,
  `GamePrice` FLOAT NULL DEFAULT NULL,
  PRIMARY KEY (`IDGameEpicGames`),
  CONSTRAINT `IDGame0`
    FOREIGN KEY (`IDGameEpicGames`)
    REFERENCES `mydb`.`game` (`IDGame`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;


-- -----------------------------------------------------
-- Table `mydb`.`gog`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`gog` ;

CREATE TABLE IF NOT EXISTS `mydb`.`gog` (
  `IDGameGOG` INT NOT NULL,
  `GameName` VARCHAR(45) NULL DEFAULT NULL,
  `GamePrice` FLOAT NULL DEFAULT NULL,
  PRIMARY KEY (`IDGameGOG`),
  CONSTRAINT `IDGame00`
    FOREIGN KEY (`IDGameGOG`)
    REFERENCES `mydb`.`game` (`IDGame`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;


-- -----------------------------------------------------
-- Table `mydb`.`steam`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`steam` ;

CREATE TABLE IF NOT EXISTS `mydb`.`steam` (
  `IDGameSteam` INT NOT NULL,
  `GameName` VARCHAR(45) NULL DEFAULT NULL,
  `GamePrice` FLOAT NULL DEFAULT NULL,
  PRIMARY KEY (`IDGameSteam`),
  CONSTRAINT `IDGameSteam`
    FOREIGN KEY (`IDGameSteam`)
    REFERENCES `mydb`.`game` (`IDGame`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
USE `mydb`;

DELIMITER $$

USE `mydb`$$
DROP TRIGGER IF EXISTS `mydb`.`Game_AFTER_DELETE` $$
USE `mydb`$$
CREATE
DEFINER=`root`@`localhost`
TRIGGER `mydb`.`Game_AFTER_DELETE`
AFTER DELETE ON `mydb`.`game`
FOR EACH ROW
BEGIN
    DELETE FROM Steam
    WHERE IDGameSteam = OLD.IDGame;
END$$


USE `mydb`$$
DROP TRIGGER IF EXISTS `mydb`.`Game_AFTER_DELETE_1` $$
USE `mydb`$$
CREATE
DEFINER=`root`@`localhost`
TRIGGER `mydb`.`Game_AFTER_DELETE_1`
AFTER DELETE ON `mydb`.`game`
FOR EACH ROW
BEGIN
    DELETE FROM EpicGames
    WHERE IDGameEpicGames = OLD.IDGame;
END$$


USE `mydb`$$
DROP TRIGGER IF EXISTS `mydb`.`Game_AFTER_DELETE_2` $$
USE `mydb`$$
CREATE
DEFINER=`root`@`localhost`
TRIGGER `mydb`.`Game_AFTER_DELETE_2`
AFTER DELETE ON `mydb`.`game`
FOR EACH ROW
BEGIN
    DELETE FROM GOG
    WHERE IDGameGOG = OLD.IDGame;
END$$


USE `mydb`$$
DROP TRIGGER IF EXISTS `mydb`.`Game_AFTER_INSERT` $$
USE `mydb`$$
CREATE
DEFINER=`root`@`localhost`
TRIGGER `mydb`.`Game_AFTER_INSERT`
AFTER INSERT ON `mydb`.`game`
FOR EACH ROW
BEGIN
 IF NEW.LauncherType = 1 THEN
        INSERT INTO Steam (IDGameSteam, GameName, GamePrice)
        VALUES (NEW.IDGame, NEW.GameName, NEW.GamePrice);
    END IF;
END$$


USE `mydb`$$
DROP TRIGGER IF EXISTS `mydb`.`Game_AFTER_INSERT_1` $$
USE `mydb`$$
CREATE
DEFINER=`root`@`localhost`
TRIGGER `mydb`.`Game_AFTER_INSERT_1`
AFTER INSERT ON `mydb`.`game`
FOR EACH ROW
BEGIN
 IF NEW.LauncherType = 2 THEN
        INSERT INTO EpicGames (IDGameEpicGames, GameName, GamePrice)
        VALUES (NEW.IDGame, NEW.GameName, NEW.GamePrice);
    END IF;
END$$


USE `mydb`$$
DROP TRIGGER IF EXISTS `mydb`.`Game_AFTER_INSERT_2` $$
USE `mydb`$$
CREATE
DEFINER=`root`@`localhost`
TRIGGER `mydb`.`Game_AFTER_INSERT_2`
AFTER INSERT ON `mydb`.`game`
FOR EACH ROW
BEGIN
 IF NEW.LauncherType = 3 THEN
        INSERT INTO GOG (IDGameGOG, GameName, GamePrice)
        VALUES (NEW.IDGame, NEW.GameName, NEW.GamePrice);
    END IF;
END$$


USE `mydb`$$
DROP TRIGGER IF EXISTS `mydb`.`Game_AFTER_UPDATE` $$
USE `mydb`$$
CREATE
DEFINER=`root`@`localhost`
TRIGGER `mydb`.`Game_AFTER_UPDATE`
AFTER UPDATE ON `mydb`.`game`
FOR EACH ROW
BEGIN
IF NEW.LauncherType = 1 THEN
        UPDATE Steam
        SET GameName = NEW.GameName, GamePrice = NEW.GamePrice
        WHERE IDGameSteam = NEW.IDGame;
    END IF;
END$$


USE `mydb`$$
DROP TRIGGER IF EXISTS `mydb`.`Game_AFTER_UPDATE_1` $$
USE `mydb`$$
CREATE
DEFINER=`root`@`localhost`
TRIGGER `mydb`.`Game_AFTER_UPDATE_1`
AFTER UPDATE ON `mydb`.`game`
FOR EACH ROW
BEGIN
IF NEW.LauncherType = 2 THEN
        UPDATE EpicGames
        SET GameName = NEW.GameName, GamePrice = NEW.GamePrice
        WHERE IDGameEpicGames = NEW.IDGame;
    END IF;
END$$


USE `mydb`$$
DROP TRIGGER IF EXISTS `mydb`.`Game_AFTER_UPDATE_2` $$
USE `mydb`$$
CREATE
DEFINER=`root`@`localhost`
TRIGGER `mydb`.`Game_AFTER_UPDATE_2`
AFTER UPDATE ON `mydb`.`game`
FOR EACH ROW
BEGIN
IF NEW.LauncherType = 3 THEN
        UPDATE GOG
        SET GameName = NEW.GameName, GamePrice = NEW.GamePrice
        WHERE IDGameGOG = NEW.IDGame;
    END IF;
END$$


DELIMITER ;
